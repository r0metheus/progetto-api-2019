Progetto di API

Struttura dati: grafo orientato e pesato (diverso peso, diverso tipo di relazioni)

addent <id_ent>: (FATTO)
	- aggiungi il nodo "id_ent" al grafo

delent <id_ent>:
	- elimina il nodo "id_ent" dal grafo, insieme a tutte le relazioni entranti e uscenti da esso
	(cancella tutti i nodi del vertex e in più cancella id_ent in tutti gli altri nodi)

addrel <id_orig><id_dest><id_rel>: (FATTO)
	- aggiunge una relazione di tipo "id_rel" che parte dal nodo id_orig e termina nel nodo id_dest
	- se la relazione esiste non fa nulla
	- se almeno uno dei due nodi non è stato aggiunto in precedenza (non è presente nel grafo) allora non fa nulla

delrel <id_orig><id_dest><id_rel>: (FATTO)
	- elimina la relazione (nel verso specificato)

report:
	- stampa l'elenco delle relazioni, riportando per ogni relazione il nodo con il numero maggiore di relazioni entranti (archi entranti di un certo peso, per intenderci)
	- output del tipo: <id_rel1><id_ent1><n_rel1_entranti>; <id_rel2><id_ent2><n_rel2_entranti>;
	- nel caso di entità multiple con numero massimo di archi entranti si scrive:
		<id_rel1><id_ent1_1><id_ent1_2>... <n_rel1_entranti>; ...
	- se non ci sono relazioni tra le entità l'output è "none", senza apici

end:
	- termine sequenza


Note:
Identificativi sempre racchiusi tra ""
Ogni id del nodo può contenere lettere (maiuscole e minuscole), cifre e simboli - _ 
Nient'altro
Identificativi case sensitive

Ordini tra caratteri - < 0-9 < A-Z < _ < a-z
Ogni comando ha spazi all'interno che separano la roba
end termina il programma, non ha output



Domande: il set di relazioni è finito (solo quelle tre: coetaneo, amico e compagno) o non specificato a priori?